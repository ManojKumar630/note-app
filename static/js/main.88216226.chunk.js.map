{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/Create area.jsx","components/App.jsx","index.js"],"names":["Header","React","createElement","currentYear","Date","getFullYear","Footer","Note","_ref","id","title","content","onDelete","onEdit","isEdit","setIsEdit","useState","editTitle","setEditTitle","editContent","setEditContent","useEffect","className","Fragment","type","value","onChange","e","target","onClick","CreateArea","note","setNote","notes","setNotes","handleChange","event","name","prevNote","[object Object]","deleteNote","prevNotes","filter","_","index","editNote","updatedTitle","updatedContent","map","onSubmit","preventDefault","trim","placeholder","rows","item","key","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.88216226.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <h1 >Keeper</h1>\r\n    </header>\r\n  );\r\n}","import React from \"react\";\r\n\r\nconst currentYear = new Date().getFullYear(); // Dynamic year\r\n\r\nexport default function Footer() {\r\n    return (\r\n      <footer>\r\n        <p>© {currentYear} Keeper App. All Rights Reserved.</p>\r\n      </footer>\r\n    );\r\n  }\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Note({ id, title, content, onDelete, onEdit }) {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editTitle, setEditTitle] = useState(title);\r\n  const [editContent, setEditContent] = useState(content);\r\n\r\n  // Update state when props change\r\n  useEffect(() => {\r\n    setEditTitle(title);\r\n    setEditContent(content);\r\n  }, [title, content]);\r\n\r\n  function handleSave() {\r\n    onEdit(id, editTitle, editContent);\r\n    setIsEdit(false);\r\n  }\r\n\r\n  function handleCancel() {\r\n    setEditTitle(title);\r\n    setEditContent(content);\r\n    setIsEdit(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      {isEdit ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            value={editTitle}\r\n            onChange={(e) => setEditTitle(e.target.value)}\r\n          />\r\n          <textarea\r\n            value={editContent}\r\n            onChange={(e) => setEditContent(e.target.value)}\r\n          />\r\n          <button onClick={handleSave}>Save</button>\r\n          <button onClick={handleCancel}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n       \r\n          <h1>{title}</h1>\r\n          <p>{content}</p>\r\n          <div className=\"btn-container\">\r\n            <button className=\"edit-btn\" onClick={() => setIsEdit(true)}>Edit</button>\r\n            <button className=\"delete-btn\" onClick={() => onDelete(id)}>Delete</button>\r\n          </div>\r\n          \r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nfunction CreateArea() {\r\n  const [note, setNote] = useState({ title: \"\", content: \"\" });\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setNote((prevNote) => ({ ...prevNote, [name]: value }));\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault(); \r\n\r\n    if (note.title.trim() !== \"\" || note.content.trim() !== \"\") {\r\n      setNotes((prevNotes) => [...prevNotes, note]); \r\n      setNote({ title: \"\", content: \"\" }); \r\n    }\r\n  }\r\n\r\n  function deleteNote(id) {\r\n    setNotes((prevNotes) => prevNotes.filter((_, index) => index !== id));\r\n  }\r\n\r\n  function editNote(id, updatedTitle, updatedContent){\r\n    setNotes((prevNotes) => prevNotes.map((note, index)=>\r\n      index === id ? {title: updatedTitle, content: updatedContent} : note\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}> {/* ✅ Added onSubmit to form */}\r\n        <input \r\n          onChange={handleChange} \r\n          name=\"title\" \r\n          value={note.title} \r\n          placeholder=\"Title\" \r\n        />\r\n        <textarea\r\n          onChange={handleChange}\r\n          name=\"content\"\r\n          placeholder=\"Take a note...\"\r\n          rows=\"3\"\r\n          value={note.content}\r\n        />\r\n        <button type=\"submit\">Add</button> {/* ✅ Ensured button type is \"submit\" */}\r\n      </form>\r\n\r\n      {notes.map((item, index) => (\r\n        <Note\r\n          title={item.title}\r\n          content={item.content}\r\n          key={index}\r\n          id={index}\r\n          onDelete={deleteNote}\r\n          onEdit={editNote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport CreateArea from './Create area';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <CreateArea />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from \"./components/App\";\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<div><App /></div>);\r\n"],"sourceRoot":""}